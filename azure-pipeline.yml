# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'challenge-devops'
  imageRepository: 'app1pythonaks'
  containerRegistry: 'acrdevopschall.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'acrdevopschall21364011-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  

stages:
# - stage: Build
#   displayName: Build stage
#   jobs:  
#   - job: Build
#     displayName: Build
#     pool:
#       name: demo
#       demands:
#       - agent.name -equals demo  
#     steps:
#     - task: Docker@2
#       displayName: Build and push an image to container registry
#       inputs:
#         command: buildAndPush
#         repository: $(imageRepository)
#         dockerfile: $(dockerfilePath)
#         containerRegistry: $(dockerRegistryServiceConnection)
#         tags: |
#           $(tag)
          
    # - upload: manifests
    #   artifact: manifests

- stage: Deploy
  displayName: Deploy stage
  #dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      name: demo
      demands:
      - agent.name -equals demo  
    environment: 'demo'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
              
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              manifests: |
                $(Pipeline.Workspace)/manifest-yaml/deployment.yml
                $(Pipeline.Workspace)/manifest-yaml/service.yml
                $(Pipeline.Workspace)/manifest-yaml/ingress.yml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)

